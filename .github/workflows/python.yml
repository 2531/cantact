name: Python

on: [push]

jobs:
  build_manylinux:
    name: manylinux Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run manylinux Builds
      uses: docker://quay.io/pypa/manylinux2010_x86_64
      with:
        entrypoint: driver/build-wheels.sh
    - name: Upload Artifacts
      uses: actions/upload-artifact@v1
      with:
        name: dist-${GITHUB_SHA}
        path: driver/dist/
    - name: Publish to TestPyPI
      env:
        TWINE_USERNAME: ericevenchick
        TWINE_PASSWORD: ${{ secrets.test_pypi_password }}
        TWINE_REPOSITORY: testpypi
      run: |
        pip install twine
        twine upload driver/dist/*
  build_macos:
    name: macOS Build
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8  
    - name: Install Latest Rust Nightly
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
    - name: Python Build
      run: |
        cd driver
        python setup.py build sdist bdist_wheel
    - name: Upload Artifacts
      uses: actions/upload-artifact@v1
      with:
        name: dist-${GITHUB_SHA}
        path: driver/dist
    - name: Publish to TestPyPI
      env:
        TWINE_USERNAME: ericevenchick
        TWINE_PASSWORD: ${{ secrets.test_pypi_password }}
        TWINE_REPOSITORY: testpypi
      run: |
        pip install twine
        twine upload driver/dist/*
  build_windows:
    name: Windows Build
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8  
    - name: Install Latest Rust Nightly
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
    - name: Python Build
      # on windows, the first attempt to run setuptools-rust fails, so do it twice.
      run: |
        cd driver
        python setup.py build || python setup.py build bdist_wheel
    - name: Upload Artifacts
      uses: actions/upload-artifact@v1
      with:
        name: dist-${GITHUB_SHA}
        path: driver/dist
    - name: Publish to TestPyPI
      env:
        TWINE_USERNAME: ericevenchick
        TWINE_PASSWORD: ${{ secrets.test_pypi_password }}
        TWINE_REPOSITORY: testpypi
      run: |
        pip install twine
        twine upload driver/dist/*
